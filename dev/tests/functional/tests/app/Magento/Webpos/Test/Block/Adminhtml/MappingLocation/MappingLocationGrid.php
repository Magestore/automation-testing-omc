<?php
/**
 * Created by PhpStorm.
 * User: PhucDo
 * Date: 3/5/2018
 * Time: 2:49 PM
 */

namespace Magento\Webpos\Test\Block\Adminhtml\MappingLocation;

use Magento\Ui\Test\Block\Adminhtml\DataGrid;
use Magento\Mtf\Client\Locator;

/**
 * Class MappingLocationGrid
 * @package Magento\Webpos\Test\Block\Adminhtml\MappingLocation
 */
class MappingLocationGrid extends DataGrid
{
    /**
     * 'Choose Locations' button.
     *
     * @var string
     */
    protected $chooseLocations = '.action-basic';

    /**
     * Magento form loader.
     *
     * @var string
     */
    protected $spinner = '[data-component="os_warehouse_locations_mapping_form.os_warehouse_locations_mapping_form"]';

    /**
     * Press 'Choose Locations' button.
     *
     * @return void
     */
    public function chooseLocations()
    {
        $this->_rootElement->find($this->chooseLocations, Locator::SELECTOR_CSS)->click();
        $this->getTemplateBlock()->waitLoader();
    }

    /**
     * Wait page to load.
     *
     * @return void
     */
    public function waitPageToLoad()
    {
        $this->waitForElementNotVisible($this->spinner);
    }

    public function getFirstData()
    {
        return $this->_rootElement->find('table > tbody > tr');
    }

    public function getWarehouseByTitle($title)
    {
        return $this->_rootElement->find('//select[text()="' . $title . '"]', locator::SELECTOR_XPATH, 'select');
    }

    public function getRowByLocation($display_name)
    {
        return $this->_rootElement->find('//table//tr[.//td[@data-index="display_name"]//span[text()="' . $display_name . '"]]', locator::SELECTOR_XPATH);
    }

    /**
     * @param $display_name
     * @param $warehouse
     * @return void
     */
    public function mappingWarehouse($display_name, $warehouse)
    {
        $row = $this->getRowByLocation($display_name)->find('.//td//select[@class="admin__control-select"]', locator::SELECTOR_XPATH);
        $row->click();
        sleep(1);
        $this->getRowByLocation($display_name)->find('.//td//select//option[contains(text(),"' . $warehouse . '")]', locator::SELECTOR_XPATH)->click();
    }

    public function checkWarehouseByLocation($location, $warehouse)
    {
        return $this->getRowByLocation($location)->find('.//td//select//option[contains(text(),"' . $warehouse . '")]', locator::SELECTOR_XPATH);
    }

    public function removeMappingByLocation($location)
    {
        $btnDelete = $this->getRowByLocation($location)->find('.//button[@class="action-delete"]', locator::SELECTOR_XPATH);
        $btnDelete->click();
        $this->waitLoader();
    }

    public function waitLoader()
    {
        parent::waitLoader(); // TODO: Change the autogenerated stub
    }
}
